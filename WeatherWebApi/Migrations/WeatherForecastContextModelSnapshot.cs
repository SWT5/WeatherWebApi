// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherWebApi.Data;

namespace WeatherWebApi.Migrations
{
    [DbContext(typeof(WeatherForecastContext))]
    partial class WeatherForecastContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherWebApi.Models.Place", b =>
                {
                    b.Property<string>("_Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("_Lat")
                        .HasColumnType("float");

                    b.Property<double>("_Lon")
                        .HasColumnType("float");

                    b.HasKey("_Name");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("WeatherWebApi.Models.WeatherForecast", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("placeFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("AirPressure")
                        .HasColumnType("float");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.HasKey("Date", "placeFK");

                    b.HasIndex("placeFK")
                        .IsUnique();

                    b.ToTable("WeatherForecastList");
                });

            modelBuilder.Entity("WeatherWebApi.Models.WeatherForecast", b =>
                {
                    b.HasOne("WeatherWebApi.Models.Place", "Place")
                        .WithOne("WeatherForecast")
                        .HasForeignKey("WeatherWebApi.Models.WeatherForecast", "placeFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
